# A YAML list of all machinery modules that should be enabled and Cuckoo will be using. Machines for
# each of the modules specified here have to be configured in their respective configuration file
# in the conf/machineries directory. It is only possible to run multiple machinery modules if their underlying
# virtualization layers do not interfere with each other.
# Example:
#
# machineries:
#   - machinery1
#   - machinery2
machineries:
{% for machinery in machineries %}
  - {{ machinery }}
{% endfor %}

# The resultserver is a Cuckoo component that running analysis machines upload their results to
# it should be reachable from the analysis machine. A resultserver will be started on the configured
# listen IP and port. Make sure the IP is off a network interface that is part of the analysis machine network or
# route/forward traffic between the analysis machines and the resultserver.
resultserver:
  listen_ip: {{ resultserver.listen_ip }}
  listen_port: {{ resultserver.listen_port }}

# Settings used by Cuckoo to find the tcpdump binary to use for network capture of machine traffic.
tcpdump:
  enabled: {{ tcpdump.enabled }}
  path: {{ tcpdump.path }}

platform:
  # The default platform to use when no platforms are supplied on submission and no required platform is
  # identified during the identification stage.
  default_platform:
    platform: {{ platform.default_platform.platform }}
    os_version: {{ platform.default_platform.os_version }}

  # Which of the supported platforms determined during the identification stage should be used if a target
  # can run on multiple platforms. A task will be created for each of the specified platforms if it is present in the
  # determined platforms.
  multi_platform:
  {% for platform in platform.multi_platform %}
    - {{ platform }}
  {% endfor %}

  # Use the machine tags determined during the identification phase for machine selection.
  # Enabling this means your analyis machines have been configured with the tags
  # listed in conf/processing/identification.yaml
  autotag: {{ platform.autotag }}

state_control:
  # Cancel an analysis if the file was not identified during the identification stage.
  cancel_unidentified: {{ state_control.cancel_unidentified }}

processing:
  # Processing workers are the dedicated processes that perform the processing
  # of submitted target and collected data.
  worker_amount:
    # Identification is responsible for unpacking and identifying a submitted target.
    identification: {{ processing.worker_amount.identification }}
    # Pre workers are responsible for all pre-processing and more extensive static analysis.
    # that is performed before tasks are created.
    pre: {{ processing.worker_amount.pre }}
    # Post workers are responsible for the processing of data collected during each task.
    post: {{ processing.worker_amount.post }}

remote_storage:
  api_url: {{ remote_storage.api_url }}

  # API key needs to have administrator privileges to export to
  # a remote Cuckoo.
  api_key: {{ remote_storage.api_key }}