{% extends "base.html.jinja2" %}
{% set active_page = "submit" %}
{% set title = "Preparing submission" %}

{# sets a (for now) fake redirect timer #}
{% block page_script %}
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const apiState          = document.querySelector('#state');
      const stateMessage      = apiState.querySelector('.api-state-message');
      const stateDescription  = apiState.querySelector('.api-state-description');
      const stateIcon         = apiState.querySelector('.api-state-icon');

      // resolve the polling api as a promise to await ready status after which
      // a redirect to the settings page has to occur.
      function manualStatus(id) {
        return new Promise((resolve, reject) => {
          fetch(`/api/analyses/${id}/manualstatus`, {
            headers: {
              'X-CSRF-Token': window.csrf_token
            }
          }).then(response => response)
            .then(resolve).catch(reject);
        });
      }

      // polls the API for its ready status.
      // - if ready, it redirects to the setting page
      // - if not ready, it timeouts a new poll call to check again.
      // - if an error occured, it displays the message in read
      // - it logs its current state_desc as it progresses
      function poll() {
        manualStatus("{{ analysis_id }}").then(response => {
            switch(response.status) {
              case 200: // ready for settings
                window.location = response.headers.get('location');
              break;
              case 202: // not ready yet
                setTimeout(poll, 1000);
              break;
              case 404: // doesn't exist - display message
                stateMessage.classList.add('has-text-red');
                stateMessage.textContent = 'Analysis not found';
                stateDescription.textContent = '';
                stateIcon.classList.remove('fa-spinner');
                stateIcon.classList.remove('fa-spin');
                stateIcon.classList.add('fa-ban');
                stateIcon.classList.add('is-red');
              break;
            }
          }).catch(args => console.error(args));
      }

      poll();
    });
  </script>
{% endblock %}

{% block body %}
  <div class="container">
    <section class="section">
      <div class="columns is-center">
        <div class="column">
          <div class="box has-shadow is-big" id="state" style="width: 500px;">
            <div class="columns is-vcenter is-gapless">
              <div class="column">
                <i class="fas fa-1x fa-spinner fa-spin api-state-icon"></i>
              </div>
              <h1 class="api-state-message no-margin-y has-margin-x">Initializing</h1/>
            </div>
            <p class="api-state-description no-margin-bottom">One moment while your submission is being identified. You'll be redirected once it finishes.</p>
          </div>
        </div>
      </div>
    </section>
  </div>
{% endblock %}
